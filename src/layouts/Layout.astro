---
import { Font, getImage } from 'astro:assets'
import { ClientRouter, fade } from 'astro:transitions'
import '../styles/global.css'
import Header from '../components/header/Header.astro'
import Background from '../components/Background.astro'
import Footer from '../components/Footer.astro'

// Preload images
import noiseImg from '../assets/noise.png'
import backgroundImg from '../assets/background.webp'

const optimizedNoiseImg = await getImage({ src: noiseImg, width: 900, height: 600, format: 'webp' })
const optimizedBackgroundImg = await getImage({ src: backgroundImg, width: 900, height: 563, format: 'webp' })

type Props = {
	title: string
	description?: string
	ogImage?: string
	ogType?: 'website' | 'article'
	articlePublishedTime?: string
	articleModifiedTime?: string
	noIndex?: boolean
}

const { title, ogImage, ogType = 'website', articleModifiedTime, articlePublishedTime, noIndex } = Astro.props

const isDev = import.meta.env.MODE === 'development'

const seoTitle = `${isDev ? '⚙️ ' : ''}${title} · Fabian Beer`
const seoDescription =
	Astro.props.description ??
	'I’m Fabian – a multidisciplinary web engineer from Germany with 8 years of experience crafting websites and apps that are thoughtfully designed, UX-focused, and built with meticulous attention to detail.'
const seoOgImage = ogImage ?? `${import.meta.env.PUBLIC_SITE_URL}/og-image-default.jpg`
const seoFullUrl = `${import.meta.env.PUBLIC_SITE_URL}${Astro.url.pathname}`
---

<!doctype html>
<html lang='en' class='scroll-smooth' transition:animate={fade({ duration: '0.15s' })}>
	<head>
		<meta charset='UTF-8' />
		<meta name='viewport' content='width=device-width' />
		{noIndex ? <meta name='robots' content='noindex' /> : null}

		{/* Preload important images */}
		<link rel='preload' href={optimizedNoiseImg.src} as='image' type='image/webp' />
		<link rel='preload' href={optimizedBackgroundImg.src} as='image' type='image/webp' />

		{/* SEO */}
		<title>{seoTitle}</title>
		<meta name='description' content={seoDescription} />
		<meta property='og:title' content={seoTitle} />
		<meta property='og:image' content={seoOgImage} />
		<meta property='og:url' content={seoFullUrl} />
		<link rel='canonical' href={seoFullUrl} />
		<meta property='og:type' content={ogType} />
		{ogType === 'article' ? <meta property='article:author' content='Fabian Beer' /> : null}
		{articlePublishedTime ? <meta property='article:published_time' content={articlePublishedTime} /> : null}
		{articleModifiedTime ? <meta property='article:modified_time' content={articleModifiedTime} /> : null}

		<link rel='sitemap' href='/sitemap-index.xml' />

		{/* Favicons */}
		<link rel='icon' type='image/svg+xml' href='/favicon.svg' />
		<link rel='icon' type='image/x-icon' href='/favicon.ico' />
		<link rel='icon' type='image/png' href='/favicon.png' sizes='32x32.png' />
		<link rel='apple-touch-icon' href='/apple-touch-icon.png' sizes='180x180' />

		{/* Fonts */}
		<Font cssVariable='--font-albert-sans' preload />
		<Font cssVariable='--font-lora' preload />

		{/* Client Router: Disabled due to plausible not tracking page changes */}
		{/* <ClientRouter fallback='swap' /> */}

		{/* Plausible Analytics */}
		{
			import.meta.env.NODE_ENV === 'production' ? (
				// This is using a proxy url, see `vercel.json` for the config.
				<script is:inline defer data-domain='madebyfabian.com' src={`/pl.js`} />
			) : null
		}

		<slot name='head' />
	</head>

	<body class='flex flex-col lg:flex-row min-h-screen bg-secondary max-w-350 lg:px-8 mx-auto'>
		<div class='fixed inset-0 size-full'>
			<Background />
		</div>
		<Header />
		<main class='relative flex-1 flex flex-col min-h-screen'>
			<div class='flex-1'><slot /></div>
			<Footer />
		</main>
	</body>
</html>
