---
import Layout from '../layouts/Layout.astro'
import Section from '../components/Section.astro'
import ButtonLink from '../components/ButtonLink.astro'

const title = 'Contact'
const description =
	'Are you interested to learn more about my work? Do you have a question, or maybe just want to reach out? I am always happy to hear from you!'
---

<Layout title={title} description={description}>
	<Fragment slot='head'>
		<script src='https://challenges.cloudflare.com/turnstile/v0/api.js' async defer is:inline></script>
	</Fragment>

	<Section>
		<div slot='headline'>
			<h1>Get in touch</h1>
			<p class='text-xl text-balance'>
				{description}
			</p>
		</div>

		<form id='contact-form'>
			<div class='flex gap-4 lg:gap-6 flex-col'>
				<div class='flex flex-col md:flex-row gap-4 lg:gap-6'>
					<input type='text' placeholder='Name' name='name' required />
					<input type='email' placeholder='Email' name='email' required />
				</div>

				<textarea placeholder='Message' name='message' required='' rows='5' required></textarea>
			</div>

			<div class='flex flex-wrap gap-6 lg:gap-8 mt-8 lg:mt-12 items-start justify-center md:justify-between'>
				<div
					class='order-2 md:order-1 relative h-[65px] w-[302px] border rounded-2xl shadow-primary-small overflow-hidden'>
					<div class='absolute inset-0 size-full z-10 bg-secondary mix-blend-multiply opacity-100 pointer-events-none'>
					</div>
					<div class='cf-turnstile' data-sitekey={import.meta.env.PUBLIC_TURNSTILE_SITE_KEY}></div>
				</div>

				<div class='order-1 md:order-2 w-full md:w-[33%]'>
					<ButtonLink type='button'> Send </ButtonLink>
				</div>
			</div>
		</form>

		<div id='success-message' class='hidden px-6 py-8 rounded-3xl bg-secondary border shadow-primary text-center'>
			<h2>Thank you!</h2>
			<p>I will get back to you as soon as possible.</p>
		</div>
	</Section>
</Layout>

<script>
	import { actions, isInputError } from 'astro:actions'

	const successMessageEl = document.getElementById('success-message')
	const contactFormEl = document.getElementById('contact-form') as HTMLFormElement | undefined

	contactFormEl?.addEventListener('submit', async event => {
		event.preventDefault()

		if (!event.target) {
			return
		}

		const formData = new FormData(contactFormEl)

		const { error } = await actions.submitContactForm(formData)
		if (error) {
			console.error(error)
			if (isInputError(error)) {
				alert('Please fill out all fields and wait for the captcha to be solved.')
			}
			return
		}

		successMessageEl?.classList.remove('hidden')
		contactFormEl?.classList.add('hidden')
	})
</script>

<style scoped>
	input,
	textarea {
		width: 100%;
		padding: calc(var(--spacing) * 3) calc(var(--spacing) * 4);
		border-radius: var(--radius-2xl);
		border: 1px solid var(--color-primary);
		background-color: var(--color-secondary);
		box-shadow: var(--shadow-primary-small);
		font-size: var(--text-base);
		outline-offset: 4px;
		transition: box-shadow, transform;
		transition-duration: var(--default-transition-duration);
		transition-timing-function: var(--default-transition-timing-function);
	}

	:is(input, textarea):focus {
		outline: none;
	}

	:is(input, textarea):focus-visible {
		transform: translate(calc(var(--spacing) * -0.5), calc(var(--spacing) * -0.5));
		box-shadow: var(--shadow-primary-small-input-active);
	}
</style>
